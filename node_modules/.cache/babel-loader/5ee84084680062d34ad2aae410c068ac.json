{"ast":null,"code":"var _jsxFileName = \"/Users/alicewon/Development/code/mod4project/new_pet_sitter_frontend/src/PetsContainer.js\";\nimport React from 'react';\nimport LoginForm from './LoginForm';\nimport PetCard from './PetCard.js';\nimport PetForm from './PetForm';\nimport LoginSignupContainer from './LoginSignupContainer.js';\nconst petsURL = \"http://localhost:3000/pets\";\n\nclass PetsContainer extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.addPet = pet => {\n      console.log(\"console logging currentUserPets:\", this.state);\n      console.log(pet); // this.setState(prevState => {\n      //   return{\n      //     currentUserPets: [...prevState.currentUserPets, this.props.pets]\n      //   }\n      //   },\n      //    () => this.postPet(pet))\n    };\n\n    this.postPet = pet => {\n      let newPets = this.state.currentUserPets.push(pet);\n      fetch(petsURL, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"Accept\": \"application/json\"\n        },\n        body: JSON.stringify({\n          pet: { ...pet,\n            owner_id: this.props.user.id\n          }\n        })\n      }).then(res => res.json()).then(pet => this.props.updatePets(pet)); // this.setState({currentUserPets: this.state.currentUserPets[0]})\n    };\n\n    this.getFreshPets = () => {\n      fetch(petsURL).then(res => res.json()).then(pets => this.filterFreshPets(pets));\n    };\n\n    this.filterFreshPets = pets => {\n      let filteredPets = pets.filter(pet => pet.owner.id == this.props.user.id);\n      console.log(filteredPets);\n    };\n\n    this.everyPet = () => {\n      if (this.props.user) {\n        console.log(this.state.currentUserPets);\n        return this.getFreshPets().map(pet => {\n          return React.createElement(PetCard, {\n            pet: pet,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 71\n            },\n            __self: this\n          });\n        });\n      } else {\n        return React.createElement(LoginForm, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 75\n          },\n          __self: this\n        });\n      }\n    };\n\n    this.state = {\n      currentUserPets: []\n    };\n  }\n\n  componentDidMount() {\n    this.setState({\n      currentUserPets: this.props.pets\n    });\n  }\n\n  render() {\n    this.getFreshPets();\n    return React.createElement(\"div\", {\n      className: \"ui grid container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, console.log(this.state), React.createElement(PetForm, {\n      addPet: this.postPet,\n      user: this.props.user,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }), this.everyPet());\n  }\n\n}\n\nexport default PetsContainer;","map":{"version":3,"sources":["/Users/alicewon/Development/code/mod4project/new_pet_sitter_frontend/src/PetsContainer.js"],"names":["React","LoginForm","PetCard","PetForm","LoginSignupContainer","petsURL","PetsContainer","Component","constructor","props","addPet","pet","console","log","state","postPet","newPets","currentUserPets","push","fetch","method","headers","body","JSON","stringify","owner_id","user","id","then","res","json","updatePets","getFreshPets","pets","filterFreshPets","filteredPets","filter","owner","everyPet","map","componentDidMount","setState","render"],"mappings":"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","sourcesContent":["import React from 'react'\nimport LoginForm from './LoginForm'\nimport PetCard from './PetCard.js'\nimport PetForm from './PetForm'\nimport LoginSignupContainer from './LoginSignupContainer.js'\nconst petsURL = \"http://localhost:3000/pets\"\n\nclass PetsContainer extends React.Component {\n\n  constructor(props) {\n    super(props)\n    this.state = {\n      currentUserPets: []\n    }\n  }\n\n  componentDidMount() {\n    this.setState({\n      currentUserPets: this.props.pets\n    })\n    \n  }\n\n\n  addPet = pet => {\nconsole.log(\"console logging currentUserPets:\", this.state)\nconsole.log(pet)\n    // this.setState(prevState => {\n    //   return{\n    //     currentUserPets: [...prevState.currentUserPets, this.props.pets]\n    //   }\n    //   },\n    //    () => this.postPet(pet))\n  }\n\n\n  //iterate over all pets for this specific owner and create a PetCard for them\n  postPet = (pet) => {\n    let newPets = this.state.currentUserPets.push(pet)\n    fetch(petsURL, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Accept\": \"application/json\"\n      },\n      body: JSON.stringify({\n        pet: { ...pet, owner_id: this.props.user.id }\n      })\n    }).then(res => res.json())\n      .then(pet => this.props.updatePets(pet))\n    // this.setState({currentUserPets: this.state.currentUserPets[0]})\n  }\n  getFreshPets = () => {\n    fetch(petsURL)\n    .then(res => res.json())\n    .then(pets => this.filterFreshPets(pets))\n  }\n\n  filterFreshPets = (pets) => {\n    let filteredPets = pets.filter(pet => \n    pet.owner.id == this.props.user.id)\n    console.log(filteredPets)\n  }\n  \n  // pets.filter(pet => pet.owner_id == this.props.user.id)\n  // Create Pet Cards:\n  everyPet = () => {\n    if (this.props.user) {\n    console.log(this.state.currentUserPets)\n    return this.getFreshPets().map(pet => {\n      return <PetCard pet={pet} />\n    }\n    )\n   } else {\n     return <LoginForm />\n   }\n  }\n\n\n\n  render() {\n    this.getFreshPets()\n\n    return (\n      <div className=\"ui grid container\">\n        {console.log(this.state)}\n        {/* /* {console.log(this.props.user)} */}\n        {/* {console.log(this.props.pets)} */}\n        {/* <button class=\"ui button\" >Add a Pet</button> */}\n        <PetForm addPet={this.postPet} user={this.props.user} />\n        {/* everyPet() */}\n\n        {/* <PetCard/> */}\n        {this.everyPet()}\n      </div>\n    )\n  }\n\n}\nexport default PetsContainer"]},"metadata":{},"sourceType":"module"}
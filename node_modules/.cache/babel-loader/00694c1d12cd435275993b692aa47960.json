{"ast":null,"code":"var _jsxFileName = \"/Users/alicewon/Development/code/mod4project/new_pet_sitter_frontend/src/App.js\";\nimport React from 'react';\nimport './App.css';\nimport HomepageLayout from './HomepageLayout';\nimport NavBar from './NavBar';\nimport LoginSignupContainer from './LoginSignupContainer';\nimport MyProfile from './MyProfile';\nimport SignupForm from './SignupForm';\nimport PetsContainer from './PetsContainer';\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nconst ownersURL = \"http://localhost:3000/owners\";\nconst petsURL = \"http://localhost:3000/pets\";\nconst notesURL = \"http://localhost:3000/notes\";\n\nclass App extends React.Component {\n  constructor() {\n    super();\n\n    this.getAllOwners = () => {\n      fetch(ownersURL).then(res => res.json()).then(owners => this.setState({\n        owners: owners\n      }));\n    };\n\n    this.getFreshPets = () => {\n      fetch(petsURL).then(res => res.json()).then(pets => this.filterFreshPets(pets));\n    };\n\n    this.filterFreshPets = pets => {\n      let filteredPets = pets.filter(pet => {\n        return pet.owner.id == this.localUser().id;\n      });\n      console.log(\"LOGGING FILTERED PETS:\", filteredPets); // console.log(pet.owner.id)\n      // console.log (\"LOCALUSER in App.js:\", this.localUser().id )\n      // pet.owner.id == this.props.user.id)\n\n      this.setState({\n        currentUserPets: filteredPets\n      });\n    };\n\n    this.onLogInUser = username => {\n      console.log(username);\n      this.getAllOwners(username);\n      let ownersfiltered = this.state.owners.filter(owner => owner.name == username);\n      this.setState({\n        isLoggedIn: true,\n        user: ownersfiltered,\n        //might cause problem for edge case of multiple sign ups in a row:\n        newSignup: false\n      });\n      console.log(ownersfiltered);\n      this.setLocalStorage(ownersfiltered[0]);\n      this.getFreshPets();\n    };\n\n    this.addUser = owner => {\n      this.setState(prevState => {\n        return {\n          owners: [...prevState.owners, owner],\n          newSignup: true\n        };\n      }, () => this.postOwner(owner));\n    };\n\n    this.postOwner = owner => {\n      fetch(ownersURL, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"Accept\": \"application/json\"\n        },\n        body: JSON.stringify(owner)\n      }).then(res => res.json()).then(data => console.log(data));\n    };\n\n    this.postPet = pet => {\n      console.log(this.localUser());\n      fetch(petsURL, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"Accept\": \"application/json\"\n        },\n        body: JSON.stringify({\n          pet: { ...pet,\n            owner_id: this.props.user.id\n          }\n        })\n      }).then(res => res.json()).then(data => this.getFreshPets()); // this.setState({...this.state, currentUserPets: this.state.currentUserPets.push(pet)}))\n    };\n\n    this.deletePet = pet => {\n      const petsToKeep = this.state.currentUserPets.filter(i => i.id != pet.id);\n      console.log(\"CONSOLE LOGGING DELETE FUNCTION:\", petsToKeep);\n      this.setState({\n        currentUserPets: petsToKeep\n      }, () => this.deletePetPost(pet));\n      console.log(pet);\n    };\n\n    this.deletePetPost = pet => {\n      console.log(pet);\n      fetch(`http://localhost:3000/pets/${pet.id}`, {\n        method: 'DELETE',\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      }).then(res => res.json()).then(() => console.log(\"deleted pet\"));\n    };\n\n    this.showPets = () => {\n      return this.localUser().pets;\n    };\n\n    this.state = {\n      owners: [],\n      isLoggedIn: false,\n      newSignup: false,\n      user: [{\n        u: 0\n      }],\n      pets: [{}],\n      currentUserPets: [] // user: [{\n      //   id: 8, \n      //   name: \"Mario\", \n      //   address: \"657 Waters Mall\", \n      //   user_image: \"https://picsum.photos/seed/jbmdqaufloldlkmoprrgfznagbhtfyapkhoflpvklyjbduohcq/250\", \n      //   background_image: \"https://picsum.photos/seed/jbmdqaufloldlkmoprrgfznagbhtfyapkhoflpvklyjbduohcq/250\"\n      // }]\n\n    };\n  } // setLocalStorage = (user) => {\n  //   localStorage.setItem('user', JSON.stringify(user))\n  //   let localUserId = localStorage.getItem('user').id\n  // }\n  // localUser = () => {\n  //   let user = JSON.parse(localStorage.getItem('user'))\n  //   return user\n  // }\n\n\n  componentDidMount() {\n    this.getAllOwners();\n\n    if (this.state.user) {\n      this.getFreshPets();\n    } else {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, React.createElement(Router, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, React.createElement(Route, {\n        path: \"/\",\n        exact: true,\n        render: () => React.createElement(HomepageLayout, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 62\n          },\n          __self: this\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      })));\n    }\n\n    fetch(petsURL).then(res => res.json()).then(pets => {\n      // console.log(pets);\n      // debugger;\n      this.setState({ ...this.state,\n        pets: pets\n      });\n    });\n  }\n\n  render() {\n    // console.log(this.state.pets)\n    // debugger;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234\n      },\n      __self: this\n    }, React.createElement(Router, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236\n      },\n      __self: this\n    }, React.createElement(NavBar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/\",\n      exact: true,\n      render: () => React.createElement(HomepageLayout, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 242\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/login\",\n      exact: true,\n      render: () => React.createElement(LoginSignupContainer, {\n        onLogInUser: this.onLogInUser,\n        loggedInState: this.state.isLoggedIn,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 249\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/signup\",\n      exact: true,\n      render: () => React.createElement(SignupForm, {\n        onAddUser: this.addUser,\n        newSignUpState: this.state.newSignup,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 255\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/profile\",\n      exact: true,\n      render: () => React.createElement(MyProfile, {\n        currentUserPets: this.state.currentUserPets,\n        updatePets: this.updatePets,\n        user: this.localUser(),\n        postPet: this.postPet,\n        freshPetsFunction: this.getFreshPets,\n        deletePet: this.deletePet,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 261\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 258\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/alicewon/Development/code/mod4project/new_pet_sitter_frontend/src/App.js"],"names":["React","HomepageLayout","NavBar","LoginSignupContainer","MyProfile","SignupForm","PetsContainer","BrowserRouter","Router","Route","ownersURL","petsURL","notesURL","App","Component","constructor","getAllOwners","fetch","then","res","json","owners","setState","getFreshPets","pets","filterFreshPets","filteredPets","filter","pet","owner","id","localUser","console","log","currentUserPets","onLogInUser","username","ownersfiltered","state","name","isLoggedIn","user","newSignup","setLocalStorage","addUser","prevState","postOwner","method","headers","body","JSON","stringify","data","postPet","owner_id","props","deletePet","petsToKeep","i","deletePetPost","showPets","u","componentDidMount","render","updatePets"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './App.css';\nimport HomepageLayout from './HomepageLayout'\nimport NavBar from './NavBar'\nimport LoginSignupContainer from  './LoginSignupContainer'\nimport MyProfile from './MyProfile'\nimport SignupForm from './SignupForm'\nimport PetsContainer from './PetsContainer'\nimport { BrowserRouter as Router, Route } from \"react-router-dom\"\n\nconst ownersURL = \"http://localhost:3000/owners\"\nconst petsURL = \"http://localhost:3000/pets\"\nconst notesURL = \"http://localhost:3000/notes\"\n\n\nclass App extends React.Component {\n  constructor() {\n    super()\n    this.state ={\n      owners: [],\n      isLoggedIn: false,\n      newSignup: false,\n      user: [{u:0}],\n      pets: [{}],\n      currentUserPets: []\n      \n      // user: [{\n        //   id: 8, \n        //   name: \"Mario\", \n        //   address: \"657 Waters Mall\", \n        //   user_image: \"https://picsum.photos/seed/jbmdqaufloldlkmoprrgfznagbhtfyapkhoflpvklyjbduohcq/250\", \n        //   background_image: \"https://picsum.photos/seed/jbmdqaufloldlkmoprrgfznagbhtfyapkhoflpvklyjbduohcq/250\"\n        // }]\n      }\n    }\n\n\n    \n\n    // setLocalStorage = (user) => {\n    //   localStorage.setItem('user', JSON.stringify(user))\n    //   let localUserId = localStorage.getItem('user').id\n    // }\n\n    // localUser = () => {\n    //   let user = JSON.parse(localStorage.getItem('user'))\n    //   return user\n    // }\n \n  componentDidMount() {\n    this.getAllOwners()\n\n    if (this.state.user){\n    this.getFreshPets()\n    } else {\n      return(\n        <div>\n        <Router>\n          <Route\n            path=\"/\"\n            exact\n            render={() => <HomepageLayout />}\n          />\n        </Router>\n        </div>\n\n      )\n    }\n\n    fetch(petsURL)\n    .then(res => res.json())\n    .then(pets => {\n      // console.log(pets);\n      // debugger;\n      this.setState({...this.state, pets: pets})\n    })\n  }\n\n  getAllOwners = () => {\n    fetch(ownersURL)\n    .then(res => res.json())\n    .then(owners => this.setState({ owners: owners}))\n  }\n\n  getFreshPets = () => {\n    fetch(petsURL)\n    .then(res => res.json())\n    .then(pets => this.filterFreshPets(pets))\n  }\n\n\n  filterFreshPets = (pets) => {\n    let filteredPets = pets.filter(pet => {\n      return pet.owner.id == this.localUser().id\n    })\n    console.log(\"LOGGING FILTERED PETS:\", filteredPets)\n      // console.log(pet.owner.id)\n      // console.log (\"LOCALUSER in App.js:\", this.localUser().id )\n    // pet.owner.id == this.props.user.id)\n    this.setState(\n      {currentUserPets: filteredPets}\n    )\n  }\n\n\n  // form for add pets: onsubmit -> post new pet to database\n  // at the end of the .then, take the JSON data (newpet) call a function to:\n  // query the database for the pet (getfreshpets) that match the user id (from props.user), send those to PetContainer\n  // in petContainer -> filter over freshpets and create a PetCard for each \n \n  \n  // updatePets = (pet) => {\n  //   console.log(\"working\")\n  //   let newPetsArray = this.state.pets.push(pet)\n  //   this.setState({\n  //     pets: newPetsArray\n  //   })\n  // }\n\n  // Login Feature, save state as user\n  onLogInUser = (username) => {\n    console.log(username)\n    this.getAllOwners(username)\n    let ownersfiltered = this.state.owners.filter(owner => owner.name == username)\n    this.setState({isLoggedIn: true, \n      user: ownersfiltered,\n      //might cause problem for edge case of multiple sign ups in a row:\n      newSignup: false})\n      console.log(ownersfiltered)\n      this.setLocalStorage(ownersfiltered[0])\n      this.getFreshPets()\n    }\n    \n\n\n//Sign Up Feature: Adding User to state of owners\n  addUser = owner => {\n    this.setState(prevState => {\n      return {\n        owners: [...prevState.owners, owner],\n        newSignup: true\n      }\n    }, () => this.postOwner(owner))\n  }\n\n//Sign Up Feature: POSTING User to Database\n  postOwner = (owner) => {\n    fetch(ownersURL, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Accept\": \"application/json\"\n      },\n      body: JSON.stringify(owner)\n    }).then(res => res.json())\n      .then(data => console.log(data))\n  }\n\n  postPet = (pet) => { \n    console.log(this.localUser())\n     fetch(petsURL, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Accept\": \"application/json\"\n      },\n      body: JSON.stringify({\n        pet: {...pet, owner_id: this.props.user.id}\n      })\n    }).then(res => res.json())\n      .then(data => this.getFreshPets())\n      // this.setState({...this.state, currentUserPets: this.state.currentUserPets.push(pet)}))\n  }\n\n  \n  deletePet = (pet) => {\n    const petsToKeep = this.state.currentUserPets.filter( i => i.id != pet.id)\n    console.log(\"CONSOLE LOGGING DELETE FUNCTION:\", petsToKeep)\n    \n    this.setState({\n      currentUserPets: petsToKeep \n    }, () => this.deletePetPost(pet))\n    \n    console.log(pet)\n  }\n  \n  deletePetPost = (pet) => {\n    console.log(pet)\n    fetch(`http://localhost:3000/pets/${pet.id}`, {\n      method: 'DELETE',\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    })\n    .then(res => res.json())\n      .then(() => console.log(\"deleted pet\"))\n  }\n\n  // method: \"DELETE\",\n  // headers: {\n  //   \"Content-Type\": \"application/json\",\n  //   \"Accept\": \"application/json\"\n  // },\n  // body: JSON.stringify({\n  //   currentUserPets: {...currentUserPets, id: this.props.pet.id}\n  // // })\n  // this.state.currentUserPets[0]\n  // renderOwnersProfile = (firstName) => {\n  //   console.log(firstName)\n  //   fetch(ownersURL)\n  //   .then(res => res.json())\n  //   .then(owners => console.log(owners))\n  // }\n\n  // handleOnLogIn = () => {\n  //   console.log(\"ello mate\")\n  // }\n\n  \n\n\n//SUGGESTIONS\n  // Global User object or Id\n  // API calls that collect pets only\n  // set up your components to account for the async pet loading, something in the meantime to load\n\n  showPets = () => {return this.localUser().pets}\n\n\n  render() {\n    // console.log(this.state.pets)\n    // debugger;\n    return (\n      <div>\n        {/* {console.log(this.localUser().pets)} */}\n        <Router>\n          <NavBar />\n\n          <Route\n            path=\"/\"\n            exact\n            render={() => <HomepageLayout />}\n          />\n                \n           <Route\n            path=\"/login\"\n            exact\n            render={() => \n            <LoginSignupContainer onLogInUser={this.onLogInUser } loggedInState={this.state.isLoggedIn}/>}\n          />\n        \n        <Route\n          path=\"/signup\"\n          exact\n          render={()=> <SignupForm onAddUser={this.addUser} newSignUpState={this.state.newSignup}/>}\n        />\n        \n        <Route\n          path=\"/profile\"\n          exact\n          render={() => <MyProfile  currentUserPets={this.state.currentUserPets} updatePets={this.updatePets} user={this.localUser()} postPet={this.postPet} freshPetsFunction={this.getFreshPets} deletePet={this.deletePet}/>}\n        />\n\n        {/* <Route \n          path=\"/pet\"\n          exact\n          render={() => <PetsContainer user={this.localUser()} pets={this.showPets()} postPet={this.postPet}/>}\n        /> */}\n          \n\n        </Router>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}
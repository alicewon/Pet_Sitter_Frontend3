{"ast":null,"code":"var _jsxFileName = \"/Users/alicewon/Development/code/mod4project/new_pet_sitter_frontend/src/PetsContainer.js\";\nimport React from 'react';\nimport LoginForm from './LoginForm';\nimport PetCard from './PetCard.js';\nimport PetForm from './PetForm';\nimport LoginSignupContainer from './LoginSignupContainer.js';\nconst petsURL = \"http://localhost:3000/pets\";\n\nclass PetsContainer extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.postPet = pet => {\n      // let newPets = this.state.currentUserPets.push(pet)\n      fetch(petsURL, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"Accept\": \"application/json\"\n        },\n        body: JSON.stringify({\n          pet: { ...pet,\n            owner_id: this.props.user.id\n          }\n        })\n      }).then(res => res.json()).then(pet => this.props.freshPetsFunction(pet)); // this.setState({currentUserPets: this.state.currentUserPets[0]})\n    };\n\n    this.everyPet = () => {\n      // console.log(this.props.getFreshPets())\n      console.log(\"PETS CONTAINER PROPS:\", this.props.user.pets); // let fresheningUpPets = this.props.freshPetsFunction()\n\n      return this.props.currentUserPets.map(pet => {\n        return React.createElement(PetCard, {\n          pet: pet,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 74\n          },\n          __self: this\n        });\n      });\n    };\n\n    this.state = {\n      currentUserPets: []\n    };\n  }\n\n  componentDidMount() {\n    this.setState({\n      currentUserPets: this.props.pets\n    });\n  } //   addPet = pet => {\n  // console.log(\"console logging currentUserPets:\", this.state)\n  // console.log(pet)\n  //     this.setState(prevState => {\n  //       return{\n  //         currentUserPets: [...prevState.currentUserPets, this.props.pets]\n  //       }\n  //       },\n  //        () => this.postPet(pet))\n  //   }\n  //iterate over all pets for this specific owner and create a PetCard for them\n\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"ui grid container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, React.createElement(PetForm, {\n      addPet: this.postPet,\n      user: this.props.user,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }), this.everyPet());\n  }\n\n}\n\nexport default PetsContainer;","map":{"version":3,"sources":["/Users/alicewon/Development/code/mod4project/new_pet_sitter_frontend/src/PetsContainer.js"],"names":["React","LoginForm","PetCard","PetForm","LoginSignupContainer","petsURL","PetsContainer","Component","constructor","props","postPet","pet","fetch","method","headers","body","JSON","stringify","owner_id","user","id","then","res","json","freshPetsFunction","everyPet","console","log","pets","currentUserPets","map","state","componentDidMount","setState","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,OAAP,MAAoB,cAApB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,oBAAP,MAAiC,2BAAjC;AACA,MAAMC,OAAO,GAAG,4BAAhB;;AAEA,MAAMC,aAAN,SAA4BN,KAAK,CAACO,SAAlC,CAA4C;AAE1CC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SA4BnBC,OA5BmB,GA4BRC,GAAD,IAAS;AACjB;AACAC,MAAAA,KAAK,CAACP,OAAD,EAAU;AACbQ,QAAAA,MAAM,EAAE,MADK;AAEbC,QAAAA,OAAO,EAAE;AACP,0BAAgB,kBADT;AAEP,oBAAU;AAFH,SAFI;AAMbC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBN,UAAAA,GAAG,EAAE,EAAE,GAAGA,GAAL;AAAUO,YAAAA,QAAQ,EAAE,KAAKT,KAAL,CAAWU,IAAX,CAAgBC;AAApC;AADc,SAAf;AANO,OAAV,CAAL,CASGC,IATH,CASQC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EATf,EAUGF,IAVH,CAUQV,GAAG,IAAI,KAAKF,KAAL,CAAWe,iBAAX,CAA6Bb,GAA7B,CAVf,EAFiB,CAajB;AACD,KA1CkB;;AAAA,SA0DnBc,QA1DmB,GA0DR,MAAM;AACf;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ,EAAqC,KAAKlB,KAAL,CAAWU,IAAX,CAAgBS,IAArD,EAFe,CAIf;;AACA,aAAO,KAAKnB,KAAL,CAAWoB,eAAX,CAA2BC,GAA3B,CAA+BnB,GAAG,IAAI;AAC3C,eAAO,oBAAC,OAAD;AAAS,UAAA,GAAG,EAAEA,GAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,OAFM,CAAP;AAKD,KApEkB;;AAEjB,SAAKoB,KAAL,GAAa;AACXF,MAAAA,eAAe,EAAE;AADN,KAAb;AAGD;;AAEDG,EAAAA,iBAAiB,GAAG;AAClB,SAAKC,QAAL,CAAc;AACZJ,MAAAA,eAAe,EAAE,KAAKpB,KAAL,CAAWmB;AADhB,KAAd;AAID,GAdyC,CAiB5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGE;;;AA6CAM,EAAAA,MAAM,GAAG;AAEP,WACE;AAAK,MAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAKE,oBAAC,OAAD;AAAS,MAAA,MAAM,EAAE,KAAKxB,OAAtB;AAA+B,MAAA,IAAI,EAAE,KAAKD,KAAL,CAAWU,IAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALF,EASG,KAAKM,QAAL,EATH,CADF;AAaD;;AAzFyC;;AA4F5C,eAAenB,aAAf","sourcesContent":["import React from 'react'\nimport LoginForm from './LoginForm'\nimport PetCard from './PetCard.js'\nimport PetForm from './PetForm'\nimport LoginSignupContainer from './LoginSignupContainer.js'\nconst petsURL = \"http://localhost:3000/pets\"\n\nclass PetsContainer extends React.Component {\n\n  constructor(props) {\n    super(props)\n    this.state = {\n      currentUserPets: []\n    }\n  }\n\n  componentDidMount() {\n    this.setState({\n      currentUserPets: this.props.pets\n    })\n    \n  }\n\n\n//   addPet = pet => {\n// console.log(\"console logging currentUserPets:\", this.state)\n// console.log(pet)\n//     this.setState(prevState => {\n//       return{\n//         currentUserPets: [...prevState.currentUserPets, this.props.pets]\n//       }\n//       },\n//        () => this.postPet(pet))\n//   }\n\n\n  //iterate over all pets for this specific owner and create a PetCard for them\n  postPet = (pet) => {\n    // let newPets = this.state.currentUserPets.push(pet)\n    fetch(petsURL, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Accept\": \"application/json\"\n      },\n      body: JSON.stringify({\n        pet: { ...pet, owner_id: this.props.user.id }\n      })\n    }).then(res => res.json())\n      .then(pet => this.props.freshPetsFunction(pet))\n    // this.setState({currentUserPets: this.state.currentUserPets[0]})\n  }\n  // getFreshPets = () => {\n  //   fetch(petsURL)\n  //   .then(res => res.json())\n  //   .then(pets => this.filterFreshPets(pets))\n  // }\n\n  // filterFreshPets = (pets) => {\n  //   let filteredPets = pets.filter(pet => \n  //   pet.owner.id == this.props.user.id)\n  //   // console.log(filteredPets)\n  // }\n  \n  // pets.filter(pet => pet.owner_id == this.props.user.id)\n  // Create Pet Cards:\n\n  everyPet = () => {\n    // console.log(this.props.getFreshPets())\n    console.log(\"PETS CONTAINER PROPS:\", this.props.user.pets)\n\n    // let fresheningUpPets = this.props.freshPetsFunction()\n    return this.props.currentUserPets.map(pet => {\n      return <PetCard pet={pet} />\n    }\n    )\n    \n  }\n\n\n\n  render() {\n\n    return (\n      <div className=\"ui grid container\">\n        {/* {console.log(this.state)} */}\n        {/* /* {console.log(this.props.user)} */}\n        {/* {console.log(this.props.pets)} */}\n        {/* <button class=\"ui button\" >Add a Pet</button> */}\n        <PetForm addPet={this.postPet} user={this.props.user} />\n        {/* everyPet() */}\n\n        {/* <PetCard/> */}\n        {this.everyPet()}\n      </div>\n    )\n  }\n\n}\nexport default PetsContainer"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/Users/alicewon/Development/code/mod4project/new_pet_sitter_frontend/src/App.js\";\nimport React from 'react';\nimport './App.css';\nimport HomepageLayout from './HomepageLayout';\nimport NavBar from './NavBar';\nimport LoginSignupContainer from './LoginSignupContainer';\nimport MyProfile from './MyProfile';\nimport SignupForm from './SignupForm';\nimport PetsContainer from './PetsContainer';\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nconst ownersURL = \"http://localhost:3000/owners\";\nconst petsURL = \"http://localhost:3000/pets\";\nconst notesURL = \"http://localhost:3000/notes\";\n\nclass App extends React.Component {\n  constructor() {\n    super();\n\n    this.setLocalStorage = user => {\n      localStorage.setItem('user', JSON.stringify(user));\n      let localUserId = localStorage.getItem('user').id;\n    };\n\n    this.localUser = () => {\n      let user = JSON.parse(localStorage.getItem('user'));\n      return user;\n    };\n\n    this.getAllOwners = () => {\n      fetch(ownersURL).then(res => res.json()).then(owners => this.setState({\n        owners: owners\n      }));\n    };\n\n    this.getFreshPets = () => {\n      fetch(petsURL).then(res => res.json()).then(pets => this.filterFreshPets(pets));\n    };\n\n    this.filterFreshPets = pets => {\n      let filteredPets = pets.filter(pet => {\n        return pet.owner.id == this.localUser().id;\n      });\n      console.log(\"LOGGING FILTERED PETS:\", filteredPets); // console.log(pet.owner.id)\n      // console.log (\"LOCALUSER in App.js:\", this.localUser().id )\n      // pet.owner.id == this.props.user.id)\n\n      this.setState({\n        currentUserPets: filteredPets\n      });\n    };\n\n    this.onLogInUser = username => {\n      console.log(username);\n      this.getAllOwners(username);\n      let ownersfiltered = this.state.owners.filter(owner => owner.name == username);\n      this.setState({\n        isLoggedIn: true,\n        user: ownersfiltered,\n        //might cause problem for edge case of multiple sign ups in a row:\n        newSignup: false\n      });\n      console.log(ownersfiltered);\n      this.setLocalStorage(ownersfiltered[0]);\n    };\n\n    this.addUser = owner => {\n      this.setState(prevState => {\n        return {\n          owners: [...prevState.owners, owner],\n          newSignup: true\n        };\n      }, () => this.postOwner(owner));\n    };\n\n    this.postOwner = owner => {\n      fetch(ownersURL, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"Accept\": \"application/json\"\n        },\n        body: JSON.stringify(owner)\n      }).then(res => res.json()).then(data => console.log(data));\n    };\n\n    this.postPet = pet => {\n      console.log(this.localUser());\n      fetch(petsURL, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"Accept\": \"application/json\"\n        },\n        body: JSON.stringify({\n          pet: { ...pet,\n            owner_id: this.props.user.id\n          }\n        })\n      }).then(res => res.json()).then(data => this.getFreshPets()); // this.setState({...this.state, currentUserPets: this.state.currentUserPets.push(pet)}))\n    };\n\n    this.showPets = () => {\n      return this.localUser().pets;\n    };\n\n    this.state = {\n      owners: [],\n      isLoggedIn: false,\n      newSignup: false,\n      user: [{}],\n      pets: [{}],\n      currentUserPets: [] // user: [{\n      //   id: 8, \n      //   name: \"Mario\", \n      //   address: \"657 Waters Mall\", \n      //   user_image: \"https://picsum.photos/seed/jbmdqaufloldlkmoprrgfznagbhtfyapkhoflpvklyjbduohcq/250\", \n      //   background_image: \"https://picsum.photos/seed/jbmdqaufloldlkmoprrgfznagbhtfyapkhoflpvklyjbduohcq/250\"\n      // }]\n\n    };\n  }\n\n  componentDidMount() {\n    this.getAllOwners();\n\n    if (localStorage.getItem('user')) {\n      this.getFreshPets();\n    }\n\n    fetch(petsURL).then(res => res.json()).then(pets => {\n      // console.log(pets);\n      // debugger;\n      this.setState({ ...this.state,\n        pets: pets\n      });\n    });\n  }\n\n  render() {\n    // console.log(this.state.pets)\n    // debugger;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197\n      },\n      __self: this\n    }, React.createElement(Router, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199\n      },\n      __self: this\n    }, React.createElement(NavBar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/\",\n      exact: true,\n      render: () => React.createElement(HomepageLayout, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 205\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/login\",\n      exact: true,\n      render: () => React.createElement(LoginSignupContainer, {\n        onLogInUser: this.onLogInUser,\n        loggedInState: this.state.isLoggedIn,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 212\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/signup\",\n      exact: true,\n      render: () => React.createElement(SignupForm, {\n        onAddUser: this.addUser,\n        newSignUpState: this.state.newSignup,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 218\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/profile\",\n      exact: true,\n      render: () => React.createElement(MyProfile, {\n        currentUserPets: this.state.currentUserPets,\n        updatePets: this.updatePets,\n        user: this.localUser(),\n        postPet: this.postPet,\n        freshPetsFunction: this.getFreshPets,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 224\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/alicewon/Development/code/mod4project/new_pet_sitter_frontend/src/App.js"],"names":["React","HomepageLayout","NavBar","LoginSignupContainer","MyProfile","SignupForm","PetsContainer","BrowserRouter","Router","Route","ownersURL","petsURL","notesURL","App","Component","constructor","setLocalStorage","user","localStorage","setItem","JSON","stringify","localUserId","getItem","id","localUser","parse","getAllOwners","fetch","then","res","json","owners","setState","getFreshPets","pets","filterFreshPets","filteredPets","filter","pet","owner","console","log","currentUserPets","onLogInUser","username","ownersfiltered","state","name","isLoggedIn","newSignup","addUser","prevState","postOwner","method","headers","body","data","postPet","owner_id","props","showPets","componentDidMount","render","updatePets"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './App.css';\nimport HomepageLayout from './HomepageLayout'\nimport NavBar from './NavBar'\nimport LoginSignupContainer from  './LoginSignupContainer'\nimport MyProfile from './MyProfile'\nimport SignupForm from './SignupForm'\nimport PetsContainer from './PetsContainer'\n\n\nimport { BrowserRouter as Router, Route } from \"react-router-dom\"\n\nconst ownersURL = \"http://localhost:3000/owners\"\nconst petsURL = \"http://localhost:3000/pets\"\nconst notesURL = \"http://localhost:3000/notes\"\n\n\nclass App extends React.Component {\n  constructor() {\n    super()\n    this.state ={\n      owners: [],\n      isLoggedIn: false,\n      newSignup: false,\n      user: [{}],\n      pets: [{}],\n      currentUserPets: []\n      \n      // user: [{\n        //   id: 8, \n        //   name: \"Mario\", \n        //   address: \"657 Waters Mall\", \n        //   user_image: \"https://picsum.photos/seed/jbmdqaufloldlkmoprrgfznagbhtfyapkhoflpvklyjbduohcq/250\", \n        //   background_image: \"https://picsum.photos/seed/jbmdqaufloldlkmoprrgfznagbhtfyapkhoflpvklyjbduohcq/250\"\n        // }]\n      }\n    }\n\n\n    \n\n    setLocalStorage = (user) => {\n      localStorage.setItem('user', JSON.stringify(user))\n      let localUserId = localStorage.getItem('user').id\n    }\n\n    localUser = () => {\n      let user = JSON.parse(localStorage.getItem('user'))\n      return user\n    }\n \n  componentDidMount() {\n    this.getAllOwners()\n\n    if (localStorage.getItem('user')) {\n    this.getFreshPets()\n    }\n\n    fetch(petsURL)\n    .then(res => res.json())\n    .then(pets => {\n      // console.log(pets);\n      // debugger;\n      this.setState({...this.state, pets: pets})\n    })\n  }\n\n  getAllOwners = () => {\n    fetch(ownersURL)\n    .then(res => res.json())\n    .then(owners => this.setState({ owners: owners}))\n  }\n\n  getFreshPets = () => {\n    fetch(petsURL)\n    .then(res => res.json())\n    .then(pets => this.filterFreshPets(pets))\n  }\n\n\n  filterFreshPets = (pets) => {\n    let filteredPets = pets.filter(pet => {\n      return pet.owner.id == this.localUser().id\n    })\n    console.log(\"LOGGING FILTERED PETS:\", filteredPets)\n      // console.log(pet.owner.id)\n      // console.log (\"LOCALUSER in App.js:\", this.localUser().id )\n    // pet.owner.id == this.props.user.id)\n    this.setState(\n      {currentUserPets: filteredPets}\n    )\n  }\n\n\n  // form for add pets: onsubmit -> post new pet to database\n  // at the end of the .then, take the JSON data (newpet) call a function to:\n  // query the database for the pet (getfreshpets) that match the user id (from props.user), send those to PetContainer\n  // in petContainer -> filter over freshpets and create a PetCard for each \n \n  \n  // updatePets = (pet) => {\n  //   console.log(\"working\")\n  //   let newPetsArray = this.state.pets.push(pet)\n  //   this.setState({\n  //     pets: newPetsArray\n  //   })\n  // }\n\n  // Login Feature, save state as user\n  onLogInUser = (username) => {\n    console.log(username)\n    this.getAllOwners(username)\n    let ownersfiltered = this.state.owners.filter(owner => owner.name == username)\n    this.setState({isLoggedIn: true, \n      user: ownersfiltered,\n      //might cause problem for edge case of multiple sign ups in a row:\n      newSignup: false})\n      console.log(ownersfiltered)\n      this.setLocalStorage(ownersfiltered[0])\n    }\n    \n\n\n//Sign Up Feature: Adding User to state of owners\n  addUser = owner => {\n    this.setState(prevState => {\n      return {\n        owners: [...prevState.owners, owner],\n        newSignup: true\n      }\n    }, () => this.postOwner(owner))\n  }\n\n//Sign Up Feature: POSTING User to Database\n  postOwner = (owner) => {\n    fetch(ownersURL, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Accept\": \"application/json\"\n      },\n      body: JSON.stringify(owner)\n    }).then(res => res.json())\n      .then(data => console.log(data))\n  }\n\n  postPet = (pet) => { \n    console.log(this.localUser())\n     fetch(petsURL, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Accept\": \"application/json\"\n      },\n      body: JSON.stringify({\n        pet: {...pet, owner_id: this.props.user.id}\n      })\n    }).then(res => res.json())\n      .then(data => this.getFreshPets())\n      // this.setState({...this.state, currentUserPets: this.state.currentUserPets.push(pet)}))\n  }\n\n\n  // deletePet = (pet) => {\n  //   this.state.currentUserPets.filter( pet => pet.id == pet)\n  //   console.log(currentUserPets)\n  // }\n\n\n  // this.state.currentUserPets[0]\n  // renderOwnersProfile = (firstName) => {\n  //   console.log(firstName)\n  //   fetch(ownersURL)\n  //   .then(res => res.json())\n  //   .then(owners => console.log(owners))\n  // }\n\n  // handleOnLogIn = () => {\n  //   console.log(\"ello mate\")\n  // }\n\n  \n\n\n//SUGGESTIONS\n  // Global User object or Id\n  // API calls that collect pets only\n  // set up your components to account for the async pet loading, something in the meantime to load\n\n  showPets = () => {return this.localUser().pets}\n\n\n  render() {\n    // console.log(this.state.pets)\n    // debugger;\n    return (\n      <div>\n        {/* {console.log(this.localUser().pets)} */}\n        <Router>\n          <NavBar />\n\n          <Route\n            path=\"/\"\n            exact\n            render={() => <HomepageLayout />}\n          />\n                \n           <Route\n            path=\"/login\"\n            exact\n            render={() => \n            <LoginSignupContainer onLogInUser={this.onLogInUser } loggedInState={this.state.isLoggedIn}/>}\n          />\n        \n        <Route\n          path=\"/signup\"\n          exact\n          render={()=> <SignupForm onAddUser={this.addUser} newSignUpState={this.state.newSignup}/>}\n        />\n        \n        <Route\n          path=\"/profile\"\n          exact\n          render={() => <MyProfile  currentUserPets={this.state.currentUserPets} updatePets={this.updatePets} user={this.localUser()} postPet={this.postPet} freshPetsFunction={this.getFreshPets}/>}\n        />\n\n        {/* <Route \n          path=\"/pet\"\n          exact\n          render={() => <PetsContainer user={this.localUser()} pets={this.showPets()} postPet={this.postPet}/>}\n        /> */}\n          \n\n        </Router>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/Users/alicewon/Development/code/mod4project/new_pet_sitter_frontend/src/PetsContainer.js\";\nimport React from 'react';\nimport PetCard from './PetCard.js';\nimport PetForm from './PetForm';\nconst petsURL = \"http://localhost:3000/pets\";\n\nclass PetsContainer extends React.Component {\n  constructor() {\n    super();\n\n    this.addPet = pet => {\n      this.setState(prevState => {\n        return {\n          currentUserPets: [...prevState.currentUserPets, pet]\n        };\n      }, () => this.postPet(pet));\n    };\n\n    this.postPet = pet => {\n      console.log(pet);\n      fetch(petsURL, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"Accept\": \"application/json\"\n        },\n        body: JSON.stringify({\n          pet\n        })\n      }).then(res => res.json()).then(data => console.log(data));\n    };\n\n    this.everyPet = () => {\n      return this.props.pets.map((pet, index) => {\n        return React.createElement(PetCard, {\n          pet: pet,\n          key: index,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 45\n          },\n          __self: this\n        });\n      });\n    };\n\n    this.state = {\n      currentUserPets: []\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"ui grid container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, React.createElement(PetForm, {\n      addPet: this.addPet,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default PetsContainer;","map":{"version":3,"sources":["/Users/alicewon/Development/code/mod4project/new_pet_sitter_frontend/src/PetsContainer.js"],"names":["React","PetCard","PetForm","petsURL","PetsContainer","Component","constructor","addPet","pet","setState","prevState","currentUserPets","postPet","console","log","fetch","method","headers","body","JSON","stringify","then","res","json","data","everyPet","props","pets","map","index","state","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,cAApB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,MAAMC,OAAO,GAAG,4BAAhB;;AAEA,MAAMC,aAAN,SAA4BJ,KAAK,CAACK,SAAlC,CAA4C;AAE1CC,EAAAA,WAAW,GAAG;AACZ;;AADY,SAQdC,MARc,GAQLC,GAAG,IAAG;AACb,WAAKC,QAAL,CAAcC,SAAS,IAAI;AACzB,eAAO;AACLC,UAAAA,eAAe,EAAE,CAAC,GAAGD,SAAS,CAACC,eAAd,EAA+BH,GAA/B;AADZ,SAAP;AAGD,OAJD,EAIG,MAAM,KAAKI,OAAL,CAAaJ,GAAb,CAJT;AAKD,KAda;;AAAA,SAmBdI,OAnBc,GAmBHJ,GAAD,IAAS;AACjBK,MAAAA,OAAO,CAACC,GAAR,CAAYN,GAAZ;AACCO,MAAAA,KAAK,CAACZ,OAAD,EAAU;AACda,QAAAA,MAAM,EAAE,MADM;AAEdC,QAAAA,OAAO,EAAE;AACP,0BAAgB,kBADT;AAEP,oBAAU;AAFH,SAFK;AAMdC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBZ,UAAAA;AADmB,SAAf;AANQ,OAAV,CAAL,CASEa,IATF,CASOC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EATd,EAUEF,IAVF,CAUOG,IAAI,IAAIX,OAAO,CAACC,GAAR,CAAYU,IAAZ,CAVf;AAYF,KAjCa;;AAAA,SAmCdC,QAnCc,GAmCH,MAAM;AACf,aAAO,KAAKC,KAAL,CAAWC,IAAX,CAAgBC,GAAhB,CAAoB,CAACpB,GAAD,EAAMqB,KAAN,KAAgB;AACzC,eAAO,oBAAC,OAAD;AAAS,UAAA,GAAG,EAAErB,GAAd;AAAmB,UAAA,GAAG,EAAEqB,KAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,OAFM,CAAP;AAGD,KAvCa;;AAEZ,SAAKC,KAAL,GAAY;AACVnB,MAAAA,eAAe,EAAC;AADN,KAAZ;AAGD;;AAoCDoB,EAAAA,MAAM,GAAG;AACP,WACE;AAAK,MAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEE,oBAAC,OAAD;AAAS,MAAA,MAAM,EAAE,KAAKxB,MAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADF;AAOD;;AAnDyC;;AAsD5C,eAAeH,aAAf","sourcesContent":["import React from 'react'\nimport PetCard from './PetCard.js'\nimport PetForm from './PetForm'\nconst petsURL = \"http://localhost:3000/pets\"\n\nclass PetsContainer extends React.Component {\n\n  constructor() {\n    super()\n    this.state ={\n      currentUserPets:[]\n    }\n  }\n  \n\n  addPet = pet=> {\n    this.setState(prevState => {\n      return {\n        currentUserPets: [...prevState.currentUserPets, pet]\n      }\n    }, () => this.postPet(pet))\n  }\n \n  \n  //iterate over all pets for this specific owner and create a PetCard for them\n\n  postPet = (pet) => { \n    console.log(pet)\n     fetch(petsURL, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Accept\": \"application/json\"\n      },\n      body: JSON.stringify({\n        pet\n      })\n    }).then(res => res.json())\n      .then(data => console.log(data))\n      \n  }\n\n  everyPet = () => {\n    return this.props.pets.map((pet, index) => {\n      return <PetCard pet={pet} key={index} />\n    })\n  }\n\n  render() {\n    return(\n      <div className=\"ui grid container\">\n        {/* <button class=\"ui button\" >Add a Pet</button> */}\n        <PetForm addPet={this.addPet}/>\n        {/* everyPet() */}\n      </div>\n    )\n  }\n\n}\nexport default PetsContainer"]},"metadata":{},"sourceType":"module"}